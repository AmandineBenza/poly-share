{
	"id": "c5260245-c5ea-4c92-8ffc-1ed30399fe85",
	"name": "Poly-share-API",
	"allTests": [],
	"timestamp": "2018-11-18T13:15:45.723Z",
	"collection_id": "ff3f518b-e863-405f-8fe3-e98f177e5851",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": [],
	"delay": 1000,
	"count": 1,
	"collection": {
		"id": "ff3f518b-e863-405f-8fe3-e98f177e5851",
		"name": "Poly-share-API",
		"description": null,
		"auth": null,
		"events": [
			{
				"listen": "prerequest",
				"script": {
					"id": "5abc33d9-c035-4736-85a2-6ece299374a0",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			},
			{
				"listen": "test",
				"script": {
					"id": "f8284f13-8375-477e-a460-438ae954b77f",
					"type": "text/javascript",
					"exec": [
						""
					]
				}
			}
		],
		"variables": [],
		"order": [
			"25b637ef-042b-4d3a-8b8f-8be0477b6143",
			"c1354a47-f446-4964-bccb-94708ff5e712",
			"d69cfd0b-b2e7-4463-b557-12344a7c7e6e",
			"9a1c487d-d249-4b94-91ca-bae87fba59e2",
			"adf42033-aef8-4c47-97f1-f5761d8568b6"
		],
		"folders_order": [],
		"owner": "2707058",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [
		{
			"value": "() => {\n    // response code validity\n    tests[\"Status code is OK.\"] = responseCode.code == 200;\n    \n    // content type header existence\n    var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\n    \n    tests[\"Has Content-Type.\"] = contentTypeHeaderExists;\n}",
			"key": "commonPreTest",
			"enabled": true
		},
		{
			"value": "(request, responseBody) => {\n    var jsonRequest = xml2Json(request.data);\n    var jsonResponse = xml2Json(responseBody);\n    \n    // the actual upsell content encapsulated into a json object\n    var upsell = jsonRequest[\"soap:Envelope\"][\"soap:Body\"][\"Fare_FlexPricerUpsell\"];\n    // the actual reply content encapsulated into a json object\n    var reply = jsonResponse[\"SOAP\\-ENV:Envelope\"][\"SOAP\\-ENV:Body\"][\"Fare_FlexPricerUpsellReply\"];\n    \n    // the connecting services\n    var connectingServices = reply[\"connectingServices\"];\n    // the lounge service\n    var loungeService = connectingServices[\"loungeService\"];\n    // the lounge array\n    var lounges = loungeService[\"lounge\"];\n    \n    // the request departure IATA code\n    var departureIata = extractRequestDeparture(upsell);\n    // the request arrival IATA code\n    var arrivalIata = extractRequestArrival(upsell);\n\n    if(lounges != null){\n            lounges.forEach((lounge) => {\n    \n        let description = lounge[\"description\"];\n        let detailedLocation = lounge[\"detailedLocation\"];\n        let entryConditions = lounge[\"entryConditions\"][\"entryCondition\"];\n        let facilities = lounge[\"facilities\"][\"facility\"];\n        let iata = lounge[\"iata\"];\n        let id = lounge[\"id\"];\n        let images = lounge[\"images\"][\"image\"];\n        let location = lounge[\"location\"];\n        let name = lounge[\"name\"];\n        let openings = lounge[\"openings\"][\"opening\"];\n        let src = lounge[\"srcUrl\"];\n        \n        // check nullity part\n        checkNullity(\"description\", description);\n        checkNullity(\"detailedLocation\", detailedLocation);\n        checkNullity(\"entryConditions\", entryConditions);\n        checkNullity(\"facilities\", facilities);\n        checkNullity(\"iata\", iata);\n        checkNullity(\"id\", id);\n        checkNullity(\"images\", images);\n        checkNullity(\"location\", location);\n        checkNullity(\"name\", name);\n        checkNullity(\"openings\", openings);\n        checkNullity(\"src\", src);\n        \n        // check non-emptyness\n        checkStrEmptyness(\"description\", description);\n        checkStrEmptyness(\"detailedLocation\", detailedLocation);\n        checkStrEmptyness(\"iata\", iata);\n        checkStrEmptyness(\"id\", id);\n        checkStrEmptyness(\"location\", location);\n        checkStrEmptyness(\"name\", name);\n        checkStrEmptyness(\"src\", src);\n        \n        // check arrays\n        checkArrayEmptyness(\"entryConditions\", entryConditions);\n        checkArrayEmptyness(\"facilities\", facilities);\n        checkArrayEmptyness(\"images\", images);\n        checkArrayEmptyness(\"openings\", openings);\n        \n        // check content\n        checkIdConsistence(id, departureIata, arrivalIata);\n        checkIataConsistence(id, departureIata, arrivalIata);\n    });\n    }\n\n    function extractRequestDeparture(upsell){\n        let itineraries = upsell[\"itinerary\"];\n        \n        // have to dissociate OW requests from multi ptc as \n        if(itineraries.constructor == Array){\n            return itineraries[0][\"departureLocalization\"][\"departurePoint\"][\"locationId\"];\n        } else {\n            return itineraries[\"departureLocalization\"][\"departurePoint\"][\"locationId\"];\n        }\n    }\n    \n    function extractRequestArrival(upsell){\n        let itineraries = upsell[\"itinerary\"];\n        \n        // have to dissociate OW requests from multi ptc as \n        if(itineraries.constructor == Array){\n            return itineraries[itineraries.length - 1][\"arrivalLocalization\"][\"arrivalPointDetails\"][\"locationId\"];\n        } else {\n            return itineraries[\"arrivalLocalization\"][\"arrivalPointDetails\"][\"locationId\"];\n        }\n    }\n    \n    function checkNullity(varName, obj){\n        tests[\"Check \" + varName + \" is not null !\"] = obj !== null;\n    }\n    \n    function checkStrEmptyness(varName, obj){\n        tests[\"Check \" + varName + \" is not empty !\"] = obj.trim() != \"\";\n    }\n    \n    function checkArrayEmptyness(varName, obj){\n        tests[\"Check \" + varName + \" is not empty !\"] = obj.length > 0;\n    }\n    \n    function checkIdConsistence(id, departure, arrival){\n        tests[\"Check id consistence.\"] = (id !== departure && id !== arrival);\n    }\n    \n    function checkIataConsistence(iata, departure, arrival){\n        tests[\"Check iata consistence.\"] = (!iata.includes(departure) && !iata.includes(arrival));\n    }\n    \n}",
			"key": "responseValidityTest",
			"enabled": true
		},
		{
			"value": "() => {\n    tests[\"Content-Type has application/json.\"] = responseHeaders[\"Content-Type\"].has(\"application/json\");\n}",
			"key": "preJsonTest",
			"enabled": true
		},
		{
			"value": "() => {\n    tests[\"Content-Type has text/plain.\"] = responseHeaders[\"Content-Type\"].has(\"text/plain\");\n}",
			"key": "preTextTest",
			"enabled": true
		}
	],
	"results": [
		{
			"name": "Reset",
			"id": "25b637ef-042b-4d3a-8b8f-8be0477b6143",
			"url": "https://poly-share.appspot.com/reset",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"649"
			],
			"allTests": [
				{}
			],
			"time": "649",
			"totalRequestTime": "649",
			"iterationResults": {}
		},
		{
			"name": "Create-users",
			"id": "c1354a47-f446-4964-bccb-94708ff5e712",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"1107"
			],
			"allTests": [
				{}
			],
			"time": "1107",
			"totalRequestTime": "1107",
			"iterationResults": {}
		},
		{
			"name": "Consult-user-is-noob",
			"id": "d69cfd0b-b2e7-4463-b557-12344a7c7e6e",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload?event=consult&mail=noobpolyshare1@gmail.com",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is OK.",
				"status": "pass",
				"Has Content-Type.": true,
				"User is noob": true
			},
			"testPassFailCounts": {
				"Status code is OK.": {
					"pass": 1,
					"fail": 0
				},
				"Has Content-Type.": {
					"pass": 1,
					"fail": 0
				},
				"User is noob": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"142"
			],
			"allTests": [
				{
					"Status code is OK.": true,
					"Has Content-Type.": true,
					"User is noob": true
				}
			],
			"time": "142",
			"totalRequestTime": "142",
			"iterationResults": {}
		},
		{
			"name": "Noob-to-casual",
			"id": "9a1c487d-d249-4b94-91ca-bae87fba59e2",
			"url": "https://poly-share.appspot.com/Upload?mail=noobpolyshare1@gmail.com&generatedFileSize=10485760",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {},
			"times": [
				"831"
			],
			"allTests": [
				{}
			],
			"time": "831",
			"totalRequestTime": "831",
			"iterationResults": {}
		},
		{
			"name": "Consult-user-is-casual",
			"id": "adf42033-aef8-4c47-97f1-f5761d8568b6",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload?event=consult&mail=noobpolyshare1@gmail.com",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Status code is OK.",
				"status": "pass",
				"Has Content-Type.": true,
				"User is casual": true
			},
			"testPassFailCounts": {
				"Status code is OK.": {
					"pass": 1,
					"fail": 0
				},
				"Has Content-Type.": {
					"pass": 1,
					"fail": 0
				},
				"User is casual": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"156"
			],
			"allTests": [
				{
					"Status code is OK.": true,
					"Has Content-Type.": true,
					"User is casual": true
				}
			],
			"time": "156",
			"totalRequestTime": "156",
			"iterationResults": {}
		}
	],
	"totalPass": 6,
	"totalFail": 0,
	"totalTime": 2885,
	"lifecycle": "done",
	"requests": [
		{
			"name": "Reset",
			"id": "25b637ef-042b-4d3a-8b8f-8be0477b6143",
			"url": "https://poly-share.appspot.com/reset",
			"time": "2018-11-18T13:15:45.723Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Create-users",
			"id": "c1354a47-f446-4964-bccb-94708ff5e712",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload",
			"time": "2018-11-18T13:15:45.723Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Consult-user-is-noob",
			"id": "d69cfd0b-b2e7-4463-b557-12344a7c7e6e",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload?event=consult&mail=noobpolyshare1@gmail.com",
			"time": "2018-11-18T13:15:45.723Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is OK.": {
					"pass": 1,
					"fail": 0
				},
				"Has Content-Type.": {
					"pass": 1,
					"fail": 0
				},
				"User is noob": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Noob-to-casual",
			"id": "9a1c487d-d249-4b94-91ca-bae87fba59e2",
			"url": "https://poly-share.appspot.com/Upload?mail=noobpolyshare1@gmail.com&generatedFileSize=10485760",
			"time": "2018-11-18T13:15:45.723Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {}
		},
		{
			"name": "Consult-user-is-casual",
			"id": "adf42033-aef8-4c47-97f1-f5761d8568b6",
			"url": "https://poly-share.appspot.com/taskqueues/datastoreUpload?event=consult&mail=noobpolyshare1@gmail.com",
			"time": "2018-11-18T13:15:45.723Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Status code is OK.": {
					"pass": 1,
					"fail": 0
				},
				"Has Content-Type.": {
					"pass": 1,
					"fail": 0
				},
				"User is casual": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}